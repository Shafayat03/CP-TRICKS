L - 02: Find the pair whose sum is equal to x | Two Pointer Series (Bangla) | C++

#include<bits/stdc++.h>
using  namespace  std;
int val1,val2;
bool solve(int ar[],int x,int n)
{
    int i=0;
    int j=n-1;
    while(i<j)
    {
        int sum=ar[i]+ar[j];
        if(sum==x)
        {
            val1=ar[i];
            val2=ar[j];
            return true;
        }
        if(sum>x)j--;
        else i++;
    }
    return false;
}
int main()
{
    int n;
    cin>>n;
    int ar[n+3];
    for(int i=0;i<n;i++)cin>>ar[i];
    sort(ar,ar+n);
    int x;
    cin>>x;
    bool ans = solve(ar,x,n);
    if(ans==true)
    {
        cout<<"YES"<<endl;
        cout<<val1<<" "<<val2<<endl;
    }
    else cout<<"NO"<<endl;
}




L - 03: Find the pair in Array Whose sum is closest to X | Two Pointer Series | C++




#include<bits/stdc++.h>
using  namespace  std;

void solve(int ar[],int n, int x)
{
    int l=0;
    int r=n-1;
    int ind1,ind2;
    int dif=INT_MAX;
    while(l<r)
    {
        int sum=ar[l]+ar[r];
        if(abs(sum-x)<dif)
        {
            ind1=l;
            ind2=r;
            dif=abs(sum-x);
        }
        if(sum>x)r--;
        else l++;
    }
    cout<<"("<<ar[ind1]<<" "<<ar[ind2]<<")  = "<< ar[ind1]+ar[ind2]<<endl;
}
int main()
{
    int n;
    cin>>n;
    int ar[n+3];
    for(int i=0;i<n;i++)cin>>ar[i];
    sort(ar,ar+n);
    int x;
    cin>>x;
    solve(ar,n,x);
}




L - 04: Find the closest pair from two sorted arrays | Two Pointer Series | C++



#include<bits/stdc++.h>
using  namespace  std;

void solve(int ar[],int br[], int n,int m, int x)
{
    int ind1,ind2,l,r;
    l=0;
    r=m-1;
    int dif=INT_MAX;
    while(l<n && r>=0)
    {
        int sum=ar[l]+br[r];
        if(abs(sum-x)<dif)
        {
            ind1=l;
            ind2=r;
            dif=abs(sum-x);
        }
        if(sum>x)r--;
        else l++;
    }
    cout<<"( "<<ar[ind1]<<" , "<<br[ind2]<<" ) = "<<ar[ind1]+br[ind2]<<endl;
}
int main()
{
    int n,m,x;
    cin>>n;
    int ar[n+3];
    for(int i=0;i<n;i++)cin>>ar[i];

    cin>>m;
    int br[m+3];
    for(int i=0;i<m;i++)cin>>br[i];

    cin>>x;

    solve(ar,br,n,m,x);
}





L - 05: Find all triplets with zero sum | Two Pointer Series | Competitive Programming | C++


#include<bits/stdc++.h>
using  namespace  std;

void solve(int ar[],int n)
{
    for(int i=0;i<n;i++)
    {
        unordered_set<int>s;
        for(int j=i+1;j<n;j++)
        {
            int x = -(ar[i]+ar[j]);
            if(s.find(x)!=s.end())
            {
                cout<<"("<<x<<","<<ar[i]<<","<<ar[j]<<")"<<endl;
            }
            else{
                s.insert(ar[j]);
            }
        }
    }
}
int main()
{
    int n;
    cin>>n;
    int ar[n+3];
    for(int i=0;i<n;i++)cin>>ar[i];
    solve(ar,n);
}




L - 06: Find a triplet that sum to a given value | Two Pointer Series | C++


#include<bits/stdc++.h>
using  namespace  std;

void solve(int ar[],int n,int x)
{
    int aa=0;
    for(int i=0;i<n;i++)
    {
        int l=i+1;
        int r=n-1;
        while(l<r)
        {
            int sum=ar[i]+ar[l]+ar[r];
            if(sum==x)
            {
                cout<<"("<<ar[i]<<","<<ar[l]<<","<<ar[r]<<")"<<endl;
                aa=1;
            }
            if(sum>x)r--;
            else l++;
        }
    }
    if(aa==0)cout<<"Triplate is not Found"<<endl;
}
int main()
{
    int n;
    cin>>n;
    int ar[n+3];
    for(int i=0;i<n;i++)cin>>ar[i];
    sort(ar,ar+n);
    int x;
    cin>>x;
    solve(ar,n,x);
}




L - 07: Find four elements that sum to a given value | Two Pointer Series | C++




#include<bits/stdc++.h>
using  namespace  std;
void solve(int ar[], int n,int x)
{
    int a=0;
    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            int l=j+1;
            int r=n-1;
            while(l<r)
            {
                int sum=ar[i]+ar[j]+ar[l]+ar[r];
                if(sum==x)
                {
                        cout<<"("<<ar[i]<<","<<ar[j]<<","<<ar[l]<<","<<ar[r]<<")"<<endl;
                        a=1;
                        l++,r++;
                }
                else if(sum>x)r--;
                else l++;
            }
        }
    }
    if(a==0)cout<<"Result is not found"<<endl;
}
int main()
{
    int n;
    cin>>n;
    int ar[n+2];
    for(int i=0;i<n;i++)cin>>ar[i];
    int x;
    cin>>x;
    solve(ar,n,x);
}




Find a triplet such that sum of two equals to third element | Two Pointer Series Bangla | C++






#include<bits/stdc++.h>
using  namespace  std;

void solve(int ar[],int n)
{
    for(int i=n-1;i>=0;i--)
    {
        int x =ar[i];
        int l=0;
        int r=i-1;
        while(l<r)
        {
            int sum=ar[l]+ar[r];
            if(sum==x)
            {
                cout<<"("<<x<<","<<ar[l]<<","<<ar[r]<<")"<<endl;
                return;
            }
            if(sum>x)r--;
            else l++;
        }
    }
    cout<<"No Such Triplates exists"<<endl;
}
int main()
{
    int n;
    cin>>n;
    int ar[n+3];
    for(int i=0;i<n;i++)cin>>ar[i];
    sort(ar,ar+n);
    solve(ar,n);
}



























































